#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the ContextGenerator.ttinclude code generation file.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;
using Esunco.Data;

namespace Esunco.Data	
{
	[NamingSettings(SourceStrategy = NamingSourceStrategy.Property, ResolveReservedWords = true, UseDelimitedSQL = true, WordBreak = "_")]
	public partial class EntityModel : OpenAccessContext, IEntityModelUnitOfWork
	{
		private static string connectionStringName = @"EsuncoConnection";
			
		private static BackendConfiguration backend = GetBackendConfiguration();
				
		private static MetadataSource metadataSource = AttributesMetadataSource.FromContext(typeof(EntityModel));
		
		public EntityModel()
			:base(connectionStringName, backend, metadataSource)
		{ }
		
		public EntityModel(string connection)
			:base(connection, backend, metadataSource)
		{ }
		
		public EntityModel(BackendConfiguration backendConfiguration)
			:base(connectionStringName, backendConfiguration, metadataSource)
		{ }
			
		public EntityModel(string connection, MetadataSource metadataSource)
			:base(connection, backend, metadataSource)
		{ }
		
		public EntityModel(string connection, BackendConfiguration backendConfiguration, MetadataSource metadataSource)
			:base(connection, backendConfiguration, metadataSource)
		{ }
			
		public IQueryable<UserDataEntity> UserDataEntities 
		{
			get
			{
				return this.GetAll<UserDataEntity>();
			}
		}
		
		public IQueryable<SimDataEntity> SimDataEntities 
		{
			get
			{
				return this.GetAll<SimDataEntity>();
			}
		}
		
		public IQueryable<RegionDataEntity> RegionDataEntities 
		{
			get
			{
				return this.GetAll<RegionDataEntity>();
			}
		}
		
		public IQueryable<PackSimDataEntity> PackSimDataEntities 
		{
			get
			{
				return this.GetAll<PackSimDataEntity>();
			}
		}
		
		public IQueryable<PackDataEntity> PackDataEntities 
		{
			get
			{
				return this.GetAll<PackDataEntity>();
			}
		}
		
		public IQueryable<OrderDataEntity> OrderDataEntities 
		{
			get
			{
				return this.GetAll<OrderDataEntity>();
			}
		}
		
		public IQueryable<OrderItemDataEntity> OrderItemDataEntities 
		{
			get
			{
				return this.GetAll<OrderItemDataEntity>();
			}
		}
		
		public IQueryable<ClientDataEntity> ClientDataEntities 
		{
			get
			{
				return this.GetAll<ClientDataEntity>();
			}
		}
		
		public IQueryable<AuctionSimDataEntity> AuctionSimDataEntities 
		{
			get
			{
				return this.GetAll<AuctionSimDataEntity>();
			}
		}
		
		public IQueryable<AuctionDataEntity> AuctionDataEntities 
		{
			get
			{
				return this.GetAll<AuctionDataEntity>();
			}
		}
		
		public IQueryable<AuctionBidDataEntity> AuctionBidDataEntities 
		{
			get
			{
				return this.GetAll<AuctionBidDataEntity>();
			}
		}
		
		public IQueryable<PaymentDataEntity> PaymentDataEntities 
		{
			get
			{
				return this.GetAll<PaymentDataEntity>();
			}
		}
		
		public IQueryable<CreditChargeDataEntity> CreditChargeDataEntities 
		{
			get
			{
				return this.GetAll<CreditChargeDataEntity>();
			}
		}
		
		public IQueryable<OrderReportViewDataEntity> OrderReportViewDataEntities 
		{
			get
			{
				return this.GetAll<OrderReportViewDataEntity>();
			}
		}
		
		public IQueryable<ClientOrderViewDataEntity> ClientOrderViewDataEntities 
		{
			get
			{
				return this.GetAll<ClientOrderViewDataEntity>();
			}
		}
		
		public static BackendConfiguration GetBackendConfiguration()
		{
			BackendConfiguration backend = new BackendConfiguration();
			backend.Backend = "MsSql";
			backend.ProviderName = "System.Data.SqlClient";
			backend.Logging.MetricStoreSnapshotInterval = 0;
		
			CustomizeBackendConfiguration(ref backend);
		
			return backend;
		}
		
		/// <summary>
		/// Allows you to customize the BackendConfiguration of EntityModel.
		/// </summary>
		/// <param name="config">The BackendConfiguration of EntityModel.</param>
		static partial void CustomizeBackendConfiguration(ref BackendConfiguration config);
		
	}
	
	public interface IEntityModelUnitOfWork : IUnitOfWork
	{
		IQueryable<UserDataEntity> UserDataEntities
		{
			get;
		}
		IQueryable<SimDataEntity> SimDataEntities
		{
			get;
		}
		IQueryable<RegionDataEntity> RegionDataEntities
		{
			get;
		}
		IQueryable<PackSimDataEntity> PackSimDataEntities
		{
			get;
		}
		IQueryable<PackDataEntity> PackDataEntities
		{
			get;
		}
		IQueryable<OrderDataEntity> OrderDataEntities
		{
			get;
		}
		IQueryable<OrderItemDataEntity> OrderItemDataEntities
		{
			get;
		}
		IQueryable<ClientDataEntity> ClientDataEntities
		{
			get;
		}
		IQueryable<AuctionSimDataEntity> AuctionSimDataEntities
		{
			get;
		}
		IQueryable<AuctionDataEntity> AuctionDataEntities
		{
			get;
		}
		IQueryable<AuctionBidDataEntity> AuctionBidDataEntities
		{
			get;
		}
		IQueryable<PaymentDataEntity> PaymentDataEntities
		{
			get;
		}
		IQueryable<CreditChargeDataEntity> CreditChargeDataEntities
		{
			get;
		}
		IQueryable<OrderReportViewDataEntity> OrderReportViewDataEntities
		{
			get;
		}
		IQueryable<ClientOrderViewDataEntity> ClientOrderViewDataEntities
		{
			get;
		}
	}
}
namespace Esunco.Data	
{
	[Table("Users")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class UserDataEntity : AcoreX.Data.Repository.IDataEntity
	{
		private long _iD;
		[Column("ID", OpenAccessType = OpenAccessType.Int64, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_iD")]
		public virtual long ID
		{
			get
			{
				return this._iD;
			}
			set
			{
				this._iD = value;
			}
		}
		
		private string _username;
		[Column("Username", OpenAccessType = OpenAccessType.StringVariableLength, Length = 100, Scale = 0, SqlType = "varchar")]
		[Storage("_username")]
		public virtual string Username
		{
			get
			{
				return this._username;
			}
			set
			{
				this._username = value;
			}
		}
		
		private string _passwordSalt;
		[Column("PasswordSalt", OpenAccessType = OpenAccessType.StringVariableLength, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("_passwordSalt")]
		public virtual string PasswordSalt
		{
			get
			{
				return this._passwordSalt;
			}
			set
			{
				this._passwordSalt = value;
			}
		}
		
		private string _email;
		[Column("Email", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("_email")]
		public virtual string Email
		{
			get
			{
				return this._email;
			}
			set
			{
				this._email = value;
			}
		}
		
		private byte _roleID;
		[Column("RoleID", OpenAccessType = OpenAccessType.Byte, Length = 0, Scale = 0, SqlType = "tinyint")]
		[Storage("_roleID")]
		public virtual byte RoleID
		{
			get
			{
				return this._roleID;
			}
			set
			{
				this._roleID = value;
			}
		}
		
		private bool _enabled;
		[Column("Enabled", OpenAccessType = OpenAccessType.Bit, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("_enabled")]
		public virtual bool Enabled
		{
			get
			{
				return this._enabled;
			}
			set
			{
				this._enabled = value;
			}
		}
		
		private DateTime _registerTime;
		[Column("RegisterTime", OpenAccessType = OpenAccessType.DateTime, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("_registerTime")]
		public virtual DateTime RegisterTime
		{
			get
			{
				return this._registerTime;
			}
			set
			{
				this._registerTime = value;
			}
		}
		
		private DateTime _lastActivityTime;
		[Column("LastActivityTime", OpenAccessType = OpenAccessType.DateTime, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("_lastActivityTime")]
		public virtual DateTime LastActivityTime
		{
			get
			{
				return this._lastActivityTime;
			}
			set
			{
				this._lastActivityTime = value;
			}
		}
		
		private string _password;
		[Column("Password", OpenAccessType = OpenAccessType.StringVariableLength, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("_password")]
		public virtual string Password
		{
			get
			{
				return this._password;
			}
			set
			{
				this._password = value;
			}
		}
		
	}
}
namespace Esunco.Data	
{
	[Table("Sims")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class SimDataEntity : AcoreX.Data.Repository.IDataEntity
	{
		private long _iD;
		[Column("ID", OpenAccessType = OpenAccessType.Int64, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_iD")]
		public virtual long ID
		{
			get
			{
				return this._iD;
			}
			set
			{
				this._iD = value;
			}
		}
		
		private long _number;
		[Column("Number", OpenAccessType = OpenAccessType.Int64, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_number")]
		public virtual long Number
		{
			get
			{
				return this._number;
			}
			set
			{
				this._number = value;
			}
		}
		
		private long _price;
		[Column("Price", OpenAccessType = OpenAccessType.Int64, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_price")]
		public virtual long Price
		{
			get
			{
				return this._price;
			}
			set
			{
				this._price = value;
			}
		}
		
		private string _receiptCode;
		[Column("ReceiptCode", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "nvarchar")]
		[Storage("_receiptCode")]
		public virtual string ReceiptCode
		{
			get
			{
				return this._receiptCode;
			}
			set
			{
				this._receiptCode = value;
			}
		}
		
		private string _paymentCode;
		[Column("PaymentCode", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "nvarchar")]
		[Storage("_paymentCode")]
		public virtual string PaymentCode
		{
			get
			{
				return this._paymentCode;
			}
			set
			{
				this._paymentCode = value;
			}
		}
		
		private string _activationCode;
		[Column("ActivationCode", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "nvarchar")]
		[Storage("_activationCode")]
		public virtual string ActivationCode
		{
			get
			{
				return this._activationCode;
			}
			set
			{
				this._activationCode = value;
			}
		}
		
		private byte _statusID;
		[Column("StatusID", OpenAccessType = OpenAccessType.Byte, Length = 0, Scale = 0, SqlType = "tinyint")]
		[Storage("_statusID")]
		public virtual byte StatusID
		{
			get
			{
				return this._statusID;
			}
			set
			{
				this._statusID = value;
			}
		}
		
		private byte _typeID;
		[Column("TypeID", OpenAccessType = OpenAccessType.Byte, Length = 0, Scale = 0, SqlType = "tinyint")]
		[Storage("_typeID")]
		public virtual byte TypeID
		{
			get
			{
				return this._typeID;
			}
			set
			{
				this._typeID = value;
			}
		}
		
		private long? _rondPrice;
		[Column("RondPrice", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_rondPrice")]
		public virtual long? RondPrice
		{
			get
			{
				return this._rondPrice;
			}
			set
			{
				this._rondPrice = value;
			}
		}
		
		private DateTime _registerTime;
		[Column("RegisterTime", OpenAccessType = OpenAccessType.DateTime, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("_registerTime")]
		public virtual DateTime RegisterTime
		{
			get
			{
				return this._registerTime;
			}
			set
			{
				this._registerTime = value;
			}
		}
		
		private string _display;
		[Column("Display", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "nvarchar")]
		[Storage("_display")]
		public virtual string Display
		{
			get
			{
				return this._display;
			}
			set
			{
				this._display = value;
			}
		}
		
		private string _code;
		[Column("Code", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 10, Scale = 0, SqlType = "nvarchar")]
		[Storage("_code")]
		public virtual string Code
		{
			get
			{
				return this._code;
			}
			set
			{
				this._code = value;
			}
		}
		
		private string _traceCode;
		[Column("TraceCode", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "nvarchar")]
		[Storage("_traceCode")]
		public virtual string TraceCode
		{
			get
			{
				return this._traceCode;
			}
			set
			{
				this._traceCode = value;
			}
		}
		
		private DateTime? _expireDate;
		[Column("ExpireDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("_expireDate")]
		public virtual DateTime? ExpireDate
		{
			get
			{
				return this._expireDate;
			}
			set
			{
				this._expireDate = value;
			}
		}
		
		private DateTime? _createDate;
		[Column("CreateDate", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("_createDate")]
		public virtual DateTime? CreateDate
		{
			get
			{
				return this._createDate;
			}
			set
			{
				this._createDate = value;
			}
		}
		
		private bool _visible;
		[Column("Visible", OpenAccessType = OpenAccessType.Bit, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("_visible")]
		public virtual bool Visible
		{
			get
			{
				return this._visible;
			}
			set
			{
				this._visible = value;
			}
		}
		
		private long _buyPrice;
		[Column("BuyPrice", OpenAccessType = OpenAccessType.Int64, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_buyPrice")]
		public virtual long BuyPrice
		{
			get
			{
				return this._buyPrice;
			}
			set
			{
				this._buyPrice = value;
			}
		}
		
		private IList<PackSimDataEntity> _packSimDataEntities = new List<PackSimDataEntity>();
		[Collection(InverseProperty = "SimDataEntity")]
		[Storage("_packSimDataEntities")]
		public virtual IList<PackSimDataEntity> PackSimDataEntities
		{
			get
			{
				return this._packSimDataEntities;
			}
		}
		
		private IList<OrderItemDataEntity> _orderItemDataEntities = new List<OrderItemDataEntity>();
		[Collection(InverseProperty = "SimDataEntity")]
		[Storage("_orderItemDataEntities")]
		public virtual IList<OrderItemDataEntity> OrderItemDataEntities
		{
			get
			{
				return this._orderItemDataEntities;
			}
		}
		
		private IList<AuctionSimDataEntity> _auctionSimDataEntities = new List<AuctionSimDataEntity>();
		[Collection(InverseProperty = "SimDataEntity")]
		[Storage("_auctionSimDataEntities")]
		public virtual IList<AuctionSimDataEntity> AuctionSimDataEntities
		{
			get
			{
				return this._auctionSimDataEntities;
			}
		}
		
	}
}
namespace Esunco.Data	
{
	[Table("Regions")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class RegionDataEntity : AcoreX.Data.Repository.IDataEntity
	{
		private byte _type;
		[Column("Type", OpenAccessType = OpenAccessType.Byte, Length = 0, Scale = 0, SqlType = "tinyint")]
		[Storage("_type")]
		public virtual byte Type
		{
			get
			{
				return this._type;
			}
			set
			{
				this._type = value;
			}
		}
		
		private string _title;
		[Column("Title", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("_title")]
		public virtual string Title
		{
			get
			{
				return this._title;
			}
			set
			{
				this._title = value;
			}
		}
		
		private long? _parentID;
		[Column("ParentID", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_parentID")]
		public virtual long? ParentID
		{
			get
			{
				return this._parentID;
			}
			set
			{
				this._parentID = value;
			}
		}
		
		private long _iD;
		[Column("ID", OpenAccessType = OpenAccessType.Int64, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_iD")]
		public virtual long ID
		{
			get
			{
				return this._iD;
			}
			set
			{
				this._iD = value;
			}
		}
		
	}
}
namespace Esunco.Data	
{
	[Table("PackSims")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class PackSimDataEntity : AcoreX.Data.Repository.IDataEntity
	{
		private long _iD;
		[Column("ID", OpenAccessType = OpenAccessType.Int64, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_iD")]
		public virtual long ID
		{
			get
			{
				return this._iD;
			}
			set
			{
				this._iD = value;
			}
		}
		
		private long _simID;
		[Column("SimID", OpenAccessType = OpenAccessType.Int64, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_simID")]
		public virtual long SimID
		{
			get
			{
				return this._simID;
			}
			set
			{
				this._simID = value;
			}
		}
		
		private long _packageID;
		[Column("PackageID", OpenAccessType = OpenAccessType.Int64, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_packageID")]
		public virtual long PackageID
		{
			get
			{
				return this._packageID;
			}
			set
			{
				this._packageID = value;
			}
		}
		
		private SimDataEntity _simDataEntity;
		[ForeignKeyAssociation(ConstraintName = "FK_PackSims_Sims", SharedFields = "SimID", TargetFields = "ID")]
		[Storage("_simDataEntity")]
		public virtual SimDataEntity SimDataEntity
		{
			get
			{
				return this._simDataEntity;
			}
			set
			{
				this._simDataEntity = value;
			}
		}
		
		private PackDataEntity _packageDataEntity;
		[ForeignKeyAssociation(ConstraintName = "FK_PackSims_Packs", SharedFields = "PackageID", TargetFields = "ID")]
		[Storage("_packageDataEntity")]
		public virtual PackDataEntity PackageDataEntity
		{
			get
			{
				return this._packageDataEntity;
			}
			set
			{
				this._packageDataEntity = value;
			}
		}
		
	}
}
namespace Esunco.Data	
{
	[Table("Packs")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class PackDataEntity : AcoreX.Data.Repository.IDataEntity
	{
		private string _title;
		[Column("Title", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("_title")]
		public virtual string Title
		{
			get
			{
				return this._title;
			}
			set
			{
				this._title = value;
			}
		}
		
		private long _price;
		[Column("Price", OpenAccessType = OpenAccessType.Int64, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_price")]
		public virtual long Price
		{
			get
			{
				return this._price;
			}
			set
			{
				this._price = value;
			}
		}
		
		private long _iD;
		[Column("ID", OpenAccessType = OpenAccessType.Int64, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_iD")]
		public virtual long ID
		{
			get
			{
				return this._iD;
			}
			set
			{
				this._iD = value;
			}
		}
		
		private DateTime _createTime;
		[Column("CreateTime", OpenAccessType = OpenAccessType.DateTime, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("_createTime")]
		public virtual DateTime CreateTime
		{
			get
			{
				return this._createTime;
			}
			set
			{
				this._createTime = value;
			}
		}
		
		private bool _visible;
		[Column("Visible", OpenAccessType = OpenAccessType.Bit, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("_visible")]
		public virtual bool Visible
		{
			get
			{
				return this._visible;
			}
			set
			{
				this._visible = value;
			}
		}
		
		private string _code;
		[Column("Code", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("_code")]
		public virtual string Code
		{
			get
			{
				return this._code;
			}
			set
			{
				this._code = value;
			}
		}
		
		private byte _typeID;
		[Column("TypeID", OpenAccessType = OpenAccessType.Byte, Length = 0, Scale = 0, SqlType = "tinyint")]
		[Storage("_typeID")]
		public virtual byte TypeID
		{
			get
			{
				return this._typeID;
			}
			set
			{
				this._typeID = value;
			}
		}
		
		private byte _statusID;
		[Column("StatusID", OpenAccessType = OpenAccessType.Byte, Length = 0, Scale = 0, SqlType = "tinyint")]
		[Storage("_statusID")]
		public virtual byte StatusID
		{
			get
			{
				return this._statusID;
			}
			set
			{
				this._statusID = value;
			}
		}
		
		private IList<PackSimDataEntity> _packSimDataEntities = new List<PackSimDataEntity>();
		[Collection(InverseProperty = "PackageDataEntity")]
		[Storage("_packSimDataEntities")]
		public virtual IList<PackSimDataEntity> PackSimDataEntities
		{
			get
			{
				return this._packSimDataEntities;
			}
		}
		
		private IList<OrderItemDataEntity> _orderItemDataEntities = new List<OrderItemDataEntity>();
		[Collection(InverseProperty = "PackDataEntity")]
		[Storage("_orderItemDataEntities")]
		public virtual IList<OrderItemDataEntity> OrderItemDataEntities
		{
			get
			{
				return this._orderItemDataEntities;
			}
		}
		
	}
}
namespace Esunco.Data	
{
	[Table("Orders")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class OrderDataEntity : AcoreX.Data.Repository.IDataEntity
	{
		private long _iD;
		[Column("ID", OpenAccessType = OpenAccessType.Int64, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_iD")]
		public virtual long ID
		{
			get
			{
				return this._iD;
			}
			set
			{
				this._iD = value;
			}
		}
		
		private long _clientID;
		[Column("ClientID", OpenAccessType = OpenAccessType.Int64, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_clientID")]
		public virtual long ClientID
		{
			get
			{
				return this._clientID;
			}
			set
			{
				this._clientID = value;
			}
		}
		
		private byte _status;
		[Column("Status", OpenAccessType = OpenAccessType.Byte, Length = 0, Scale = 0, SqlType = "tinyint")]
		[Storage("_status")]
		public virtual byte Status
		{
			get
			{
				return this._status;
			}
			set
			{
				this._status = value;
			}
		}
		
		private long? _paymentID;
		[Column("PaymentID", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_paymentID")]
		public virtual long? PaymentID
		{
			get
			{
				return this._paymentID;
			}
			set
			{
				this._paymentID = value;
			}
		}
		
		private bool _isCredit;
		[Column("IsCredit", OpenAccessType = OpenAccessType.Bit, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("_isCredit")]
		public virtual bool IsCredit
		{
			get
			{
				return this._isCredit;
			}
			set
			{
				this._isCredit = value;
			}
		}
		
		private long _totalPrice;
		[Column("TotalPrice", OpenAccessType = OpenAccessType.Int64, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_totalPrice")]
		public virtual long TotalPrice
		{
			get
			{
				return this._totalPrice;
			}
			set
			{
				this._totalPrice = value;
			}
		}
		
		private DateTime _createTime;
		[Column("CreateTime", OpenAccessType = OpenAccessType.DateTime, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("_createTime")]
		public virtual DateTime CreateTime
		{
			get
			{
				return this._createTime;
			}
			set
			{
				this._createTime = value;
			}
		}
		
		private string _filePassword;
		[Column("FilePassword", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "nvarchar")]
		[Storage("_filePassword")]
		public virtual string FilePassword
		{
			get
			{
				return this._filePassword;
			}
			set
			{
				this._filePassword = value;
			}
		}
		
		private Guid? _fileID;
		[Column("FileID", OpenAccessType = OpenAccessType.Guid, IsNullable = true, Length = 0, Scale = 0, SqlType = "uniqueidentifier")]
		[Storage("_fileID")]
		public virtual Guid? FileID
		{
			get
			{
				return this._fileID;
			}
			set
			{
				this._fileID = value;
			}
		}
		
		private ClientDataEntity _clientDataEntity;
		[ForeignKeyAssociation(ConstraintName = "FK_Orders_Clients", SharedFields = "ClientID", TargetFields = "ID")]
		[Storage("_clientDataEntity")]
		public virtual ClientDataEntity ClientDataEntity
		{
			get
			{
				return this._clientDataEntity;
			}
			set
			{
				this._clientDataEntity = value;
			}
		}
		
		private PaymentDataEntity _paymentDataEntity;
		[ForeignKeyAssociation(ConstraintName = "FK_Orders_Payments", SharedFields = "PaymentID", TargetFields = "ID")]
		[Storage("_paymentDataEntity")]
		public virtual PaymentDataEntity PaymentDataEntity
		{
			get
			{
				return this._paymentDataEntity;
			}
			set
			{
				this._paymentDataEntity = value;
			}
		}
		
		private IList<OrderItemDataEntity> _orderItemDataEntities = new List<OrderItemDataEntity>();
		[Collection(InverseProperty = "OrderDataEntity")]
		[Storage("_orderItemDataEntities")]
		public virtual IList<OrderItemDataEntity> OrderItemDataEntities
		{
			get
			{
				return this._orderItemDataEntities;
			}
		}
		
	}
}
namespace Esunco.Data	
{
	[Table("OrderItems")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class OrderItemDataEntity : AcoreX.Data.Repository.IDataEntity
	{
		private long _iD;
		[Column("ID", OpenAccessType = OpenAccessType.Int64, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_iD")]
		public virtual long ID
		{
			get
			{
				return this._iD;
			}
			set
			{
				this._iD = value;
			}
		}
		
		private long _orderID;
		[Column("OrderID", OpenAccessType = OpenAccessType.Int64, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_orderID")]
		public virtual long OrderID
		{
			get
			{
				return this._orderID;
			}
			set
			{
				this._orderID = value;
			}
		}
		
		private long? _simID;
		[Column("SimID", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_simID")]
		public virtual long? SimID
		{
			get
			{
				return this._simID;
			}
			set
			{
				this._simID = value;
			}
		}
		
		private long? _packID;
		[Column("PackID", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_packID")]
		public virtual long? PackID
		{
			get
			{
				return this._packID;
			}
			set
			{
				this._packID = value;
			}
		}
		
		private long? _auctionID;
		[Column("AuctionID", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_auctionID")]
		public virtual long? AuctionID
		{
			get
			{
				return this._auctionID;
			}
			set
			{
				this._auctionID = value;
			}
		}
		
		private long _price;
		[Column("Price", OpenAccessType = OpenAccessType.Int64, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_price")]
		public virtual long Price
		{
			get
			{
				return this._price;
			}
			set
			{
				this._price = value;
			}
		}
		
		private SimDataEntity _simDataEntity;
		[ForeignKeyAssociation(ConstraintName = "FK_OrderItems_Sims", SharedFields = "SimID", TargetFields = "ID")]
		[Storage("_simDataEntity")]
		public virtual SimDataEntity SimDataEntity
		{
			get
			{
				return this._simDataEntity;
			}
			set
			{
				this._simDataEntity = value;
			}
		}
		
		private PackDataEntity _packDataEntity;
		[ForeignKeyAssociation(ConstraintName = "FK_OrderItems_Packs", SharedFields = "PackID", TargetFields = "ID")]
		[Storage("_packDataEntity")]
		public virtual PackDataEntity PackDataEntity
		{
			get
			{
				return this._packDataEntity;
			}
			set
			{
				this._packDataEntity = value;
			}
		}
		
		private OrderDataEntity _orderDataEntity;
		[ForeignKeyAssociation(ConstraintName = "FK_OrderItems_Orders", SharedFields = "OrderID", TargetFields = "ID")]
		[Storage("_orderDataEntity")]
		public virtual OrderDataEntity OrderDataEntity
		{
			get
			{
				return this._orderDataEntity;
			}
			set
			{
				this._orderDataEntity = value;
			}
		}
		
		private AuctionDataEntity _auctionDataEntity;
		[ForeignKeyAssociation(ConstraintName = "FK_OrderItems_Auctions", SharedFields = "AuctionID", TargetFields = "ID")]
		[Storage("_auctionDataEntity")]
		public virtual AuctionDataEntity AuctionDataEntity
		{
			get
			{
				return this._auctionDataEntity;
			}
			set
			{
				this._auctionDataEntity = value;
			}
		}
		
	}
}
namespace Esunco.Data	
{
	[Table("Clients")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class ClientDataEntity : AcoreX.Data.Repository.IDataEntity
	{
		private long _iD;
		[Column("ID", OpenAccessType = OpenAccessType.Int64, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_iD")]
		public virtual long ID
		{
			get
			{
				return this._iD;
			}
			set
			{
				this._iD = value;
			}
		}
		
		private string _firstname;
		[Column("Firstname", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("_firstname")]
		public virtual string Firstname
		{
			get
			{
				return this._firstname;
			}
			set
			{
				this._firstname = value;
			}
		}
		
		private string _lastname;
		[Column("Lastname", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("_lastname")]
		public virtual string Lastname
		{
			get
			{
				return this._lastname;
			}
			set
			{
				this._lastname = value;
			}
		}
		
		private string _phone;
		[Column("Phone", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("_phone")]
		public virtual string Phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				this._phone = value;
			}
		}
		
		private string _mobile;
		[Column("Mobile", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("_mobile")]
		public virtual string Mobile
		{
			get
			{
				return this._mobile;
			}
			set
			{
				this._mobile = value;
			}
		}
		
		private string _address;
		[Column("Address", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("_address")]
		public virtual string Address
		{
			get
			{
				return this._address;
			}
			set
			{
				this._address = value;
			}
		}
		
		private string _postalCode;
		[Column("PostalCode", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("_postalCode")]
		public virtual string PostalCode
		{
			get
			{
				return this._postalCode;
			}
			set
			{
				this._postalCode = value;
			}
		}
		
		private string _nationalCode;
		[Column("NationalCode", OpenAccessType = OpenAccessType.UnicodeStringFixedLength, IsNullable = true, Length = 10, Scale = 0, SqlType = "nchar")]
		[Storage("_nationalCode")]
		public virtual string NationalCode
		{
			get
			{
				return this._nationalCode;
			}
			set
			{
				this._nationalCode = value;
			}
		}
		
		private bool _blocked;
		[Column("Blocked", OpenAccessType = OpenAccessType.Bit, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("_blocked")]
		public virtual bool Blocked
		{
			get
			{
				return this._blocked;
			}
			set
			{
				this._blocked = value;
			}
		}
		
		private string _officeCode;
		[Column("OfficeCode", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("_officeCode")]
		public virtual string OfficeCode
		{
			get
			{
				return this._officeCode;
			}
			set
			{
				this._officeCode = value;
			}
		}
		
		private string _email;
		[Column("Email", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("_email")]
		public virtual string Email
		{
			get
			{
				return this._email;
			}
			set
			{
				this._email = value;
			}
		}
		
		private string _token;
		[Column("Token", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("_token")]
		public virtual string Token
		{
			get
			{
				return this._token;
			}
			set
			{
				this._token = value;
			}
		}
		
		private int _sMSCode;
		[Column("SMSCode", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("_sMSCode")]
		public virtual int SMSCode
		{
			get
			{
				return this._sMSCode;
			}
			set
			{
				this._sMSCode = value;
			}
		}
		
		private DateTime _sMSCodeCreatedTime;
		[Column("SMSCodeCreatedTime", OpenAccessType = OpenAccessType.DateTime, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("_sMSCodeCreatedTime")]
		public virtual DateTime SMSCodeCreatedTime
		{
			get
			{
				return this._sMSCodeCreatedTime;
			}
			set
			{
				this._sMSCodeCreatedTime = value;
			}
		}
		
		private long _credit;
		[Column("Credit", OpenAccessType = OpenAccessType.Int64, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_credit")]
		public virtual long Credit
		{
			get
			{
				return this._credit;
			}
			set
			{
				this._credit = value;
			}
		}
		
		private long _lastCredit;
		[Column("LastCredit", OpenAccessType = OpenAccessType.Int64, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_lastCredit")]
		public virtual long LastCredit
		{
			get
			{
				return this._lastCredit;
			}
			set
			{
				this._lastCredit = value;
			}
		}
		
		private long _blockedCredit;
		[Column("BlockedCredit", OpenAccessType = OpenAccessType.Int64, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_blockedCredit")]
		public virtual long BlockedCredit
		{
			get
			{
				return this._blockedCredit;
			}
			set
			{
				this._blockedCredit = value;
			}
		}
		
		private byte _accountType;
		[Column("AccountType", OpenAccessType = OpenAccessType.Byte, Length = 0, Scale = 0, SqlType = "tinyint")]
		[Storage("_accountType")]
		public virtual byte AccountType
		{
			get
			{
				return this._accountType;
			}
			set
			{
				this._accountType = value;
			}
		}
		
		private IList<OrderDataEntity> _orderDataEntities = new List<OrderDataEntity>();
		[Collection(InverseProperty = "ClientDataEntity")]
		[Storage("_orderDataEntities")]
		public virtual IList<OrderDataEntity> OrderDataEntities
		{
			get
			{
				return this._orderDataEntities;
			}
		}
		
		private IList<AuctionBidDataEntity> _auctionBidDataEntities = new List<AuctionBidDataEntity>();
		[Collection(InverseProperty = "ClientDataEntity")]
		[Storage("_auctionBidDataEntities")]
		public virtual IList<AuctionBidDataEntity> AuctionBidDataEntities
		{
			get
			{
				return this._auctionBidDataEntities;
			}
		}
		
		private IList<CreditChargeDataEntity> _creditChargeDataEntities = new List<CreditChargeDataEntity>();
		[Collection(InverseProperty = "ClientDataEntity")]
		[Storage("_creditChargeDataEntities")]
		public virtual IList<CreditChargeDataEntity> CreditChargeDataEntities
		{
			get
			{
				return this._creditChargeDataEntities;
			}
		}
		
	}
}
namespace Esunco.Data	
{
	[Table("AuctionSims")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class AuctionSimDataEntity : AcoreX.Data.Repository.IDataEntity
	{
		private long _iD;
		[Column("ID", OpenAccessType = OpenAccessType.Int64, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_iD")]
		public virtual long ID
		{
			get
			{
				return this._iD;
			}
			set
			{
				this._iD = value;
			}
		}
		
		private long _simID;
		[Column("SimID", OpenAccessType = OpenAccessType.Int64, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_simID")]
		public virtual long SimID
		{
			get
			{
				return this._simID;
			}
			set
			{
				this._simID = value;
			}
		}
		
		private long _auctionID;
		[Column("AuctionID", OpenAccessType = OpenAccessType.Int64, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_auctionID")]
		public virtual long AuctionID
		{
			get
			{
				return this._auctionID;
			}
			set
			{
				this._auctionID = value;
			}
		}
		
		private SimDataEntity _simDataEntity;
		[ForeignKeyAssociation(ConstraintName = "FK_AuctionSims_Sims", SharedFields = "SimID", TargetFields = "ID")]
		[Storage("_simDataEntity")]
		public virtual SimDataEntity SimDataEntity
		{
			get
			{
				return this._simDataEntity;
			}
			set
			{
				this._simDataEntity = value;
			}
		}
		
		private AuctionDataEntity _auctionDataEntity;
		[ForeignKeyAssociation(ConstraintName = "FK_AuctionSims_Auctions", SharedFields = "AuctionID", TargetFields = "ID")]
		[Storage("_auctionDataEntity")]
		public virtual AuctionDataEntity AuctionDataEntity
		{
			get
			{
				return this._auctionDataEntity;
			}
			set
			{
				this._auctionDataEntity = value;
			}
		}
		
	}
}
namespace Esunco.Data	
{
	[Table("Auctions")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class AuctionDataEntity : AcoreX.Data.Repository.IDataEntity
	{
		private long _iD;
		[Column("ID", OpenAccessType = OpenAccessType.Int64, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_iD")]
		public virtual long ID
		{
			get
			{
				return this._iD;
			}
			set
			{
				this._iD = value;
			}
		}
		
		private DateTime _startTime;
		[Column("StartTime", OpenAccessType = OpenAccessType.DateTime, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("_startTime")]
		public virtual DateTime StartTime
		{
			get
			{
				return this._startTime;
			}
			set
			{
				this._startTime = value;
			}
		}
		
		private DateTime _finishTime;
		[Column("FinishTime", OpenAccessType = OpenAccessType.DateTime, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("_finishTime")]
		public virtual DateTime FinishTime
		{
			get
			{
				return this._finishTime;
			}
			set
			{
				this._finishTime = value;
			}
		}
		
		private long _basePrice;
		[Column("BasePrice", OpenAccessType = OpenAccessType.Int64, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_basePrice")]
		public virtual long BasePrice
		{
			get
			{
				return this._basePrice;
			}
			set
			{
				this._basePrice = value;
			}
		}
		
		private string _title;
		[Column("Title", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("_title")]
		public virtual string Title
		{
			get
			{
				return this._title;
			}
			set
			{
				this._title = value;
			}
		}
		
		private DateTime? _notifyTime;
		[Column("NotifyTime", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("_notifyTime")]
		public virtual DateTime? NotifyTime
		{
			get
			{
				return this._notifyTime;
			}
			set
			{
				this._notifyTime = value;
			}
		}
		
		private byte _statusID;
		[Column("StatusID", OpenAccessType = OpenAccessType.Byte, Length = 0, Scale = 0, SqlType = "tinyint")]
		[Storage("_statusID")]
		public virtual byte StatusID
		{
			get
			{
				return this._statusID;
			}
			set
			{
				this._statusID = value;
			}
		}
		
		private IList<OrderItemDataEntity> _orderItemDataEntities = new List<OrderItemDataEntity>();
		[Collection(InverseProperty = "AuctionDataEntity")]
		[Storage("_orderItemDataEntities")]
		public virtual IList<OrderItemDataEntity> OrderItemDataEntities
		{
			get
			{
				return this._orderItemDataEntities;
			}
		}
		
		private IList<AuctionSimDataEntity> _auctionSimDataEntities = new List<AuctionSimDataEntity>();
		[Collection(InverseProperty = "AuctionDataEntity")]
		[Storage("_auctionSimDataEntities")]
		public virtual IList<AuctionSimDataEntity> AuctionSimDataEntities
		{
			get
			{
				return this._auctionSimDataEntities;
			}
		}
		
		private IList<AuctionBidDataEntity> _auctionBidDataEntities = new List<AuctionBidDataEntity>();
		[Collection(InverseProperty = "AuctionDataEntity")]
		[Storage("_auctionBidDataEntities")]
		public virtual IList<AuctionBidDataEntity> AuctionBidDataEntities
		{
			get
			{
				return this._auctionBidDataEntities;
			}
		}
		
	}
}
namespace Esunco.Data	
{
	[Table("AuctionBids")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class AuctionBidDataEntity : AcoreX.Data.Repository.IDataEntity
	{
		private long _iD;
		[Column("ID", OpenAccessType = OpenAccessType.Int64, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_iD")]
		public virtual long ID
		{
			get
			{
				return this._iD;
			}
			set
			{
				this._iD = value;
			}
		}
		
		private long _auctionID;
		[Column("AuctionID", OpenAccessType = OpenAccessType.Int64, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_auctionID")]
		public virtual long AuctionID
		{
			get
			{
				return this._auctionID;
			}
			set
			{
				this._auctionID = value;
			}
		}
		
		private long _clientID;
		[Column("ClientID", OpenAccessType = OpenAccessType.Int64, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_clientID")]
		public virtual long ClientID
		{
			get
			{
				return this._clientID;
			}
			set
			{
				this._clientID = value;
			}
		}
		
		private DateTime _time;
		[Column("Time", OpenAccessType = OpenAccessType.DateTime, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("_time")]
		public virtual DateTime Time
		{
			get
			{
				return this._time;
			}
			set
			{
				this._time = value;
			}
		}
		
		private long _price;
		[Column("Price", OpenAccessType = OpenAccessType.Int64, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_price")]
		public virtual long Price
		{
			get
			{
				return this._price;
			}
			set
			{
				this._price = value;
			}
		}
		
		private bool _isWinner;
		[Column("IsWinner", OpenAccessType = OpenAccessType.Bit, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("_isWinner")]
		public virtual bool IsWinner
		{
			get
			{
				return this._isWinner;
			}
			set
			{
				this._isWinner = value;
			}
		}
		
		private ClientDataEntity _clientDataEntity;
		[ForeignKeyAssociation(ConstraintName = "FK_AuctionBids_Clients", SharedFields = "ClientID", TargetFields = "ID")]
		[Storage("_clientDataEntity")]
		public virtual ClientDataEntity ClientDataEntity
		{
			get
			{
				return this._clientDataEntity;
			}
			set
			{
				this._clientDataEntity = value;
			}
		}
		
		private AuctionDataEntity _auctionDataEntity;
		[ForeignKeyAssociation(ConstraintName = "FK_AuctionBids_Auctions", SharedFields = "AuctionID", TargetFields = "ID")]
		[Storage("_auctionDataEntity")]
		public virtual AuctionDataEntity AuctionDataEntity
		{
			get
			{
				return this._auctionDataEntity;
			}
			set
			{
				this._auctionDataEntity = value;
			}
		}
		
	}
}
namespace Esunco.Data	
{
	[Table("Payments")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class PaymentDataEntity : AcoreX.Data.Repository.IDataEntity
	{
		private long _iD;
		[Column("ID", OpenAccessType = OpenAccessType.Int64, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_iD")]
		public virtual long ID
		{
			get
			{
				return this._iD;
			}
			set
			{
				this._iD = value;
			}
		}
		
		private long _saleOrderID;
		[Column("SaleOrderID", OpenAccessType = OpenAccessType.Int64, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_saleOrderID")]
		public virtual long SaleOrderID
		{
			get
			{
				return this._saleOrderID;
			}
			set
			{
				this._saleOrderID = value;
			}
		}
		
		private long _price;
		[Column("Price", OpenAccessType = OpenAccessType.Int64, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_price")]
		public virtual long Price
		{
			get
			{
				return this._price;
			}
			set
			{
				this._price = value;
			}
		}
		
		private string _resultCode;
		[Column("ResultCode", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("_resultCode")]
		public virtual string ResultCode
		{
			get
			{
				return this._resultCode;
			}
			set
			{
				this._resultCode = value;
			}
		}
		
		private string _refID;
		[Column("RefID", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("_refID")]
		public virtual string RefID
		{
			get
			{
				return this._refID;
			}
			set
			{
				this._refID = value;
			}
		}
		
		private long? _saleRefID;
		[Column("SaleRefID", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_saleRefID")]
		public virtual long? SaleRefID
		{
			get
			{
				return this._saleRefID;
			}
			set
			{
				this._saleRefID = value;
			}
		}
		
		private byte _status;
		[Column("Status", OpenAccessType = OpenAccessType.Byte, Length = 0, Scale = 0, SqlType = "tinyint")]
		[Storage("_status")]
		public virtual byte Status
		{
			get
			{
				return this._status;
			}
			set
			{
				this._status = value;
			}
		}
		
		private DateTime _createTime;
		[Column("CreateTime", OpenAccessType = OpenAccessType.DateTime, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("_createTime")]
		public virtual DateTime CreateTime
		{
			get
			{
				return this._createTime;
			}
			set
			{
				this._createTime = value;
			}
		}
		
		private IList<OrderDataEntity> _orderDataEntities = new List<OrderDataEntity>();
		[Collection(InverseProperty = "PaymentDataEntity")]
		[Storage("_orderDataEntities")]
		public virtual IList<OrderDataEntity> OrderDataEntities
		{
			get
			{
				return this._orderDataEntities;
			}
		}
		
		private IList<CreditChargeDataEntity> _creditChargeDataEntities = new List<CreditChargeDataEntity>();
		[Collection(InverseProperty = "PaymentDataEntity")]
		[Storage("_creditChargeDataEntities")]
		public virtual IList<CreditChargeDataEntity> CreditChargeDataEntities
		{
			get
			{
				return this._creditChargeDataEntities;
			}
		}
		
	}
}
namespace Esunco.Data	
{
	[Table("CreditCharges")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class CreditChargeDataEntity : AcoreX.Data.Repository.IDataEntity
	{
		private long _iD;
		[Column("ID", OpenAccessType = OpenAccessType.Int64, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_iD")]
		public virtual long ID
		{
			get
			{
				return this._iD;
			}
			set
			{
				this._iD = value;
			}
		}
		
		private long _clientID;
		[Column("ClientID", OpenAccessType = OpenAccessType.Int64, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_clientID")]
		public virtual long ClientID
		{
			get
			{
				return this._clientID;
			}
			set
			{
				this._clientID = value;
			}
		}
		
		private long _paymentID;
		[Column("PaymentID", OpenAccessType = OpenAccessType.Int64, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_paymentID")]
		public virtual long PaymentID
		{
			get
			{
				return this._paymentID;
			}
			set
			{
				this._paymentID = value;
			}
		}
		
		private PaymentDataEntity _paymentDataEntity;
		[ForeignKeyAssociation(ConstraintName = "FK_CreditCharges_Payments", SharedFields = "PaymentID", TargetFields = "ID")]
		[Storage("_paymentDataEntity")]
		public virtual PaymentDataEntity PaymentDataEntity
		{
			get
			{
				return this._paymentDataEntity;
			}
			set
			{
				this._paymentDataEntity = value;
			}
		}
		
		private ClientDataEntity _clientDataEntity;
		[ForeignKeyAssociation(ConstraintName = "FK_CreditCharges_Clients", SharedFields = "ClientID", TargetFields = "ID")]
		[Storage("_clientDataEntity")]
		public virtual ClientDataEntity ClientDataEntity
		{
			get
			{
				return this._clientDataEntity;
			}
			set
			{
				this._clientDataEntity = value;
			}
		}
		
	}
}
namespace Esunco.Data	
{
	[View("OrderReportView")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class OrderReportViewDataEntity
	{
		private long? _saleRefID;
		[Column("SaleRefID", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_saleRefID")]
		public virtual long? SaleRefID
		{
			get
			{
				return this._saleRefID;
			}
			set
			{
				this._saleRefID = value;
			}
		}
		
		private long? _saleOrderID;
		[Column("SaleOrderID", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_saleOrderID")]
		public virtual long? SaleOrderID
		{
			get
			{
				return this._saleOrderID;
			}
			set
			{
				this._saleOrderID = value;
			}
		}
		
		private string _resultCode;
		[Column("ResultCode", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("_resultCode")]
		public virtual string ResultCode
		{
			get
			{
				return this._resultCode;
			}
			set
			{
				this._resultCode = value;
			}
		}
		
		private string _refID;
		[Column("RefID", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "varchar")]
		[Storage("_refID")]
		public virtual string RefID
		{
			get
			{
				return this._refID;
			}
			set
			{
				this._refID = value;
			}
		}
		
		private byte? _paymentStatus;
		[Column("PaymentStatus", OpenAccessType = OpenAccessType.Byte, IsNullable = true, Length = 0, Scale = 0, SqlType = "tinyint")]
		[Storage("_paymentStatus")]
		public virtual byte? PaymentStatus
		{
			get
			{
				return this._paymentStatus;
			}
			set
			{
				this._paymentStatus = value;
			}
		}
		
		private DateTime _orderTime;
		[Column("OrderTime", OpenAccessType = OpenAccessType.DateTime, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("_orderTime")]
		public virtual DateTime OrderTime
		{
			get
			{
				return this._orderTime;
			}
			set
			{
				this._orderTime = value;
			}
		}
		
		private byte _orderStatus;
		[Column("OrderStatus", OpenAccessType = OpenAccessType.Byte, Length = 0, Scale = 0, SqlType = "tinyint")]
		[Storage("_orderStatus")]
		public virtual byte OrderStatus
		{
			get
			{
				return this._orderStatus;
			}
			set
			{
				this._orderStatus = value;
			}
		}
		
		private bool _isCredit;
		[Column("IsCredit", OpenAccessType = OpenAccessType.Bit, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("_isCredit")]
		public virtual bool IsCredit
		{
			get
			{
				return this._isCredit;
			}
			set
			{
				this._isCredit = value;
			}
		}
		
		private long _iD;
		[Column("ID", OpenAccessType = OpenAccessType.Int64, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_iD")]
		public virtual long ID
		{
			get
			{
				return this._iD;
			}
			set
			{
				this._iD = value;
			}
		}
		
		private string _clientOfficeCode;
		[Column("ClientOfficeCode", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("_clientOfficeCode")]
		public virtual string ClientOfficeCode
		{
			get
			{
				return this._clientOfficeCode;
			}
			set
			{
				this._clientOfficeCode = value;
			}
		}
		
		private string _clientNationalCode;
		[Column("ClientNationalCode", OpenAccessType = OpenAccessType.UnicodeStringFixedLength, IsNullable = true, Length = 10, Scale = 0, SqlType = "nchar")]
		[Storage("_clientNationalCode")]
		public virtual string ClientNationalCode
		{
			get
			{
				return this._clientNationalCode;
			}
			set
			{
				this._clientNationalCode = value;
			}
		}
		
		private string _clientMobile;
		[Column("ClientMobile", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("_clientMobile")]
		public virtual string ClientMobile
		{
			get
			{
				return this._clientMobile;
			}
			set
			{
				this._clientMobile = value;
			}
		}
		
		private string _clientFullname;
		[Column("ClientFullname", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, Length = 401, Scale = 0, SqlType = "nvarchar")]
		[Storage("_clientFullname")]
		public virtual string ClientFullname
		{
			get
			{
				return this._clientFullname;
			}
			set
			{
				this._clientFullname = value;
			}
		}
		
		private long _price;
		[Column("Price", OpenAccessType = OpenAccessType.Int64, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_price")]
		public virtual long Price
		{
			get
			{
				return this._price;
			}
			set
			{
				this._price = value;
			}
		}
		
		private DateTime? _paymentTime;
		[Column("PaymentTime", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("_paymentTime")]
		public virtual DateTime? PaymentTime
		{
			get
			{
				return this._paymentTime;
			}
			set
			{
				this._paymentTime = value;
			}
		}
		
		private long? _paymentID;
		[Column("PaymentID", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_paymentID")]
		public virtual long? PaymentID
		{
			get
			{
				return this._paymentID;
			}
			set
			{
				this._paymentID = value;
			}
		}
		
	}
}
namespace Esunco.Data	
{
	[View("ClientOrderView")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	public partial class ClientOrderViewDataEntity
	{
		private long? _total;
		[Column("Total", OpenAccessType = OpenAccessType.Int64, IsNullable = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_total")]
		public virtual long? Total
		{
			get
			{
				return this._total;
			}
			set
			{
				this._total = value;
			}
		}
		
		private string _nationalCode;
		[Column("NationalCode", OpenAccessType = OpenAccessType.UnicodeStringFixedLength, IsNullable = true, Length = 10, Scale = 0, SqlType = "nchar")]
		[Storage("_nationalCode")]
		public virtual string NationalCode
		{
			get
			{
				return this._nationalCode;
			}
			set
			{
				this._nationalCode = value;
			}
		}
		
		private string _name;
		[Column("Name", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, Length = 401, Scale = 0, SqlType = "nvarchar")]
		[Storage("_name")]
		public virtual string Name
		{
			get
			{
				return this._name;
			}
			set
			{
				this._name = value;
			}
		}
		
		private string _mobile;
		[Column("Mobile", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, Length = 200, Scale = 0, SqlType = "nvarchar")]
		[Storage("_mobile")]
		public virtual string Mobile
		{
			get
			{
				return this._mobile;
			}
			set
			{
				this._mobile = value;
			}
		}
		
		private long _iD;
		[Column("ID", OpenAccessType = OpenAccessType.Int64, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "bigint")]
		[Storage("_iD")]
		public virtual long ID
		{
			get
			{
				return this._iD;
			}
			set
			{
				this._iD = value;
			}
		}
		
	}
}
#pragma warning restore 1591
